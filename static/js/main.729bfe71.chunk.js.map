{"version":3,"sources":["components/mainContainer/services/mentorService.js","components/mainContainer/components/mentorSelector/services/mentorSelectorService.js","components/mainContainer/components/mentorSelector/index.jsx","components/mainContainer/components/dashboard/components/dashboardHeaders/components/header/services/headerService.js","components/mainContainer/components/dashboard/components/dashboardHeaders/components/header/index.jsx","components/mainContainer/components/dashboard/components/dashboardHeaders/index.jsx","components/mainContainer/components/dashboard/components/dashboardBody/components/tableRow/components/rowHeader/services/rowHeaderService.js","components/mainContainer/components/dashboard/components/dashboardBody/components/tableRow/components/rowHeader/index.jsx","components/mainContainer/components/dashboard/components/dashboardBody/components/tableRow/components/cell/services/cellService.js","components/mainContainer/components/dashboard/components/dashboardBody/components/tableRow/components/cell/index.jsx","components/mainContainer/components/dashboard/components/dashboardBody/components/tableRow/index.jsx","components/mainContainer/components/dashboard/components/dashboardBody/index.jsx","components/mainContainer/components/dashboard/services/dashboardService.js","components/mainContainer/components/dashboard/index.jsx","components/mainContainer/index.jsx","index.js"],"names":["data","getMentorNameFromStorage","localStorage","getItem","setMentorNameInStorage","mentorName","setItem","setMentor","mentorInfo","allmentors","mentorData","mentors","tasksInfo","tasks","mentorService","getAllData","getAllMentorsNames","Object","keys","reduce","acc","el","res","name","getMentor","allMentorsNames","mentorSelectorService","getInitialState","props","selectedOption","value","selectedMentor","label","index","indexOf","getOptions","map","e","idx","MentorSelector","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","options","state","setState","onMentorSelect","react_default","a","createElement","className","react_select_esm","onChange","React","Component","getLinkText","replace","toLowerCase","Header","_ref","studentColWidth","studentGithub","style","href","target","rel","DashboardHeaders","gitHubs","width","student","key","concat","length","getClassName","students","mark","RowHeader","task","rowHeader","Fragment","link","taskStatus","cellClassName","Cell","TableRow","status","DashboardBody","hasKey","object","prototype","hasOwnProperty","getDashboardData","tasksFullFilled","forEach","taskName","indexStudent","hasStudent","currentStudent","reg","RegExp","filter","st","search","_Object$keys$filter","slicedToArray","Dashboard","_this$state","studentsList","nextProps","_getDashboardData","_getDashboardData2","MainContainer","handleMentorSelect","mentorSelector_MentorSelector","dashboard_Dashboard","ReactDOM","render","mainContainer_MainContainer","document","getElementById"],"mappings":"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","file":"static/js/main.729bfe71.chunk.js","sourcesContent":["\nimport * as dataJSON from '../../../data/merge.json';\n\nconst data = dataJSON.default;\n\nconst STORAGE_VARIABLE_MENTOR_NAME = 'rssMentorName';\n\nconst getAllData = () => data;\n\nconst getMentorNameFromStorage = () => localStorage.getItem(STORAGE_VARIABLE_MENTOR_NAME);\n\nconst setMentorNameInStorage = (mentorName) => {\n  localStorage.setItem(STORAGE_VARIABLE_MENTOR_NAME, mentorName);\n};\n\nconst setMentor = (mentorName) => {\n  setMentorNameInStorage(mentorName);\n  return {\n    mentorName: mentorName || '',\n    mentorInfo: data.allmentors[mentorName],\n    mentorData: data.mentors[mentorName],\n    tasksInfo: data.tasks,\n  };\n};\n\nconst getMentor = () => setMentor(getMentorNameFromStorage());\n\nconst getAllMentorsNames = () => Object.keys(data.allmentors).reduce((acc, el) => {\n  const res = acc;\n  res[el] = data.allmentors[el].name;\n  return res;\n}, {});\n\nexport default {\n  getAllData,\n  getMentorNameFromStorage,\n  setMentorNameInStorage,\n  getAllMentorsNames,\n  setMentor,\n  getMentor,\n};\n","\nimport mentorService from '../../../services/mentorService';\n\nconst allMentorsNames = mentorService.getAllMentorsNames();\n\nconst getInitialState = props => (\n  {\n    selectedOption: {\n      value: props.selectedMentor,\n      label: allMentorsNames[props.selectedMentor],\n      name: allMentorsNames[props.selectedMentor],\n      index: Object.keys(allMentorsNames).indexOf(props.selectedMentor),\n    },\n  }\n);\n\nconst getOptions = () => {\n  const options = Object.keys(allMentorsNames).map((e, idx) => ({\n    value: e,\n    label: e,\n    name: allMentorsNames[e],\n    index: idx,\n  }));\n  return options;\n};\n\n\nexport default {\n  getInitialState,\n  getOptions,\n};\n","import React from 'react';\nimport Select from 'react-select';\nimport './style.css';\nimport mentorSelectorService from './services/mentorSelectorService';\n\nexport default class MentorSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = mentorSelectorService.getInitialState(props);\n    this.options = mentorSelectorService.getOptions();\n  }\n\n  handleChange = (selectedOption) => {\n    if (this.options[this.state.selectedOption.index]) {\n      this.options[this.state.selectedOption.index].label = this.options[\n        this.state.selectedOption.index\n      ].value;\n    }\n    this.options[selectedOption.index].label = this.options[selectedOption.index].name;\n    this.setState(\n      { selectedOption },\n      this.props.onMentorSelect(selectedOption.value),\n    );\n  }\n\n  render() {\n    return (\n      <div className={'selector-wrapper'}>\n        <p className={'selector-header'}>Ментор</p>\n        <Select\n          value={this.state.selectedOption}\n          className={'selector'}\n          onChange={this.handleChange}\n          options={this.options}\n        />\n      </div>\n    );\n  }\n}\n","const getLinkText = value => value\n  .replace('http://github.com/', '')\n  .replace('https://github.com/', '')\n  .toLowerCase()\n  .replace(/\\/$/, '')\n  .replace('rolling-scopes-school/', '')\n  .replace('-2018q3', '');\n\n\nexport default getLinkText;\n","import React from 'react';\nimport getLinkText from './services/headerService';\n\nexport default function Header({ studentColWidth, studentGithub }) {\n  return (\n  <th style={studentColWidth}>\n    <a className={'table-link'}\n      href={studentGithub}\n      target=\"_blank\" rel=\"noreferrer noopener\">\n      {getLinkText(studentGithub)}\n    </a>\n  </th>\n  );\n}\n","import React from 'react';\nimport Header from './components/header/index.jsx';\n\nexport default function DashboardHeaders({ gitHubs }) {\n  return (\n    <thead>\n      <tr>\n        <th style={{ width: '20%' }} />\n        {gitHubs.map(student => (\n          <Header\n            key={student}\n            studentGithub={student}\n            studentColWidth={{ width: `${80 / gitHubs.length}%` }}\n          />\n        ))}\n      </tr>\n    </thead>\n  );\n}\n","const getClassName = (students) => {\n  const studentsCount = Object.keys(students).length;\n  const marksCount = Object.keys(students).reduce((acc, student) => (\n    acc + (students[student].mark !== 'empty' && students[student].mark !== 'todo')), 0);\n\n  return (studentsCount === marksCount) ? 'stateColorChecked' : 'stateColorWhite';\n};\n\nexport default getClassName;\n","import React from 'react';\nimport getClassName from './services/rowHeaderService';\n\nexport default function RowHeader({ task, rowHeader }) {\n  return (\n    <td className={getClassName(task.students)}>\n      <>\n        {task.link !== '' && (\n          <a className = {'table-link'}\n            href = {task.link}\n            target = \"_blank\"\n            rel = \"noreferrer noopener\">\n            {rowHeader}\n          </a>\n        )}\n        {task.link === '' && <span>{rowHeader}</span>}\n      </>\n    </td>\n  );\n}\n","\nconst getClassName = (props) => {\n  const { taskStatus, student } = props;\n  let cellClassName = '';\n\n  if (student.mark.length !== 0) cellClassName = 'stateColorChecked';\n  if (student.mark === 'todo') {\n    if (taskStatus === 'Checked') cellClassName = 'stateColorNoChecked';\n    if (taskStatus === 'Checking') cellClassName = 'stateColorNeedCheck';\n    if (taskStatus === 'ToDo') cellClassName = 'stateColorToDo';\n    if (taskStatus === 'In Progress') cellClassName = 'stateColorActive';\n  }\n  return cellClassName;\n};\n\nexport default getClassName;\n","import React from 'react';\nimport getClassName from './services/cellService';\nimport './style.css';\n\nexport default function Cell(props) {\n  return <td className={getClassName(props)}>{}</td>;\n}\n","import React from 'react';\nimport RowHeader from './components/rowHeader/index.jsx';\nimport Cell from './components/cell/index.jsx';\n\nexport default function TableRow({ rowHeader, task }) {\n  return (\n    <tr>\n      <RowHeader rowHeader={rowHeader} task={task} />\n      {Object.keys(task.students).map(student => (\n        <Cell\n          key={student}\n          student={task.students[student]}\n          taskStatus={task.status}\n        />\n      ))}\n    </tr>\n  );\n}\n","import React from 'react';\nimport TableRow from './components/tableRow/index.jsx';\n\nexport default function DashboardBody({ tasks }) {\n  return (\n    <tbody>\n    { Object.keys(tasks).map(task => (\n        <TableRow key={task} rowHeader={task} task={tasks[task]} />\n    ))}\n    </tbody>\n  );\n}\n","const hasKey = (object, key) => Object.prototype.hasOwnProperty.call(object, key);\n\nconst getDashboardData = (props) => {\n  const { mentorData } = props;\n  const { mentorInfo } = props;\n  const { tasksInfo } = props;\n  const tasks = mentorData ? mentorData.tasks : {};\n  const students = mentorInfo['student-list'];\n  const tasksFullFilled = {};\n\n  Object.keys(tasksInfo).forEach((taskName) => {\n    tasksFullFilled[taskName] = {\n      link: tasksInfo[taskName].link,\n      status: tasksInfo[taskName].status,\n      students: {},\n    };\n    Object.keys(students).forEach((indexStudent) => {\n      let hasStudent = false;\n      let currentStudent = '';\n      if (hasKey(tasks, taskName)) {\n        const reg = new RegExp(`/${students[indexStudent]}$`);\n        hasStudent = Object.keys(tasks[taskName].students)\n          .filter(st => st.search(reg) > 0).length === 1;\n        [currentStudent] = Object.keys(tasks[taskName].students)\n          .filter(st => st.search(reg) > 0);\n      }\n      if (hasKey(tasks, taskName) && hasStudent) {\n        tasksFullFilled[taskName].students[students[indexStudent]] = tasks[taskName]\n          .students[currentStudent];\n      } else {\n        tasksFullFilled[taskName].students[students[indexStudent]] = { mark: 'todo' };\n      }\n    });\n  });\n  return [students, tasksFullFilled];\n};\n\nexport default getDashboardData;\n","import React, { Component } from 'react';\nimport DashboardHeaders from './components/dashboardHeaders/index.jsx';\nimport DashboardBody from './components/dashboardBody/index.jsx';\nimport getDashboardData from './services/dashboardService';\nimport './style.css';\n\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    const [students, tasksFullFilled] = getDashboardData(nextProps);\n    return {\n      students, tasksFullFilled,\n    };\n  }\n\n  render() {\n    const { students, tasksFullFilled } = this.state;\n    return (\n      <table className=\"dashboard\">\n        <DashboardHeaders gitHubs={ students} studentsList={students}/>\n        <DashboardBody tasks={tasksFullFilled} />\n      </table>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport MentorSelector from './components/mentorSelector/index.jsx';\nimport Dashboard from './components/dashboard/index.jsx';\nimport mentorService from './services/mentorService';\n\nexport default class MainContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = mentorService.getMentor();\n  }\n\n  handleMentorSelect = (mentorName) => {\n    this.setState(mentorService.setMentor(mentorName));\n  }\n\n  render() {\n    return (\n      <>\n        <MentorSelector\n          selectedMentor = {this.state.mentorName}\n          onMentorSelect = {this.handleMentorSelect}\n        />\n        {this.state.mentorInfo && (\n          <Dashboard\n            mentorInfo = {this.state.mentorInfo}\n            mentorData = {this.state.mentorData}\n            tasksInfo = {this.state.tasksInfo}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainContainer from './components/mainContainer/index.jsx';\n\nReactDOM.render(<MainContainer/>, document.getElementById('root'));\n"],"sourceRoot":""}